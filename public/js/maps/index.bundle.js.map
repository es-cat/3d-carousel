{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/ease-functions/ease-functions.js","node_modules/fbjs/lib/emptyFunction.js","node_modules/fbjs/lib/invariant.js","node_modules/fbjs/lib/warning.js","node_modules/prop-types/checkPropTypes.js","node_modules/prop-types/factoryWithThrowingShims.js","node_modules/prop-types/factoryWithTypeCheckers.js","node_modules/prop-types/index.js","node_modules/prop-types/lib/ReactPropTypesSecret.js","src/components/\bcarousel/Carousel.jsx","src/index.jsx","src/util/depot.js","src/util/layout.js","src/util/util.js"],"names":[],"mappingsrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjhgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACdA;;;;AACA;;;;AACA;;IAAY,I;;AACZ;;;;AACA;;;;;;;;;;;;;;AAEA,IAAI,UAAU,sBAAd;;IACM,Q;;;AACF,sBAAY,KAAZ,EAAmB;AAAA;;AAAA,wHACT,KADS;;AAEf,cAAK,SAAL,GAAiB;AACb,mBAAO,oBAAU,KAAV,CAAgB,UADV;AAEb,qBAAS,oBAAU,MAAV,CAAiB,UAFb;AAGb,oBAAQ,oBAAU,MAAV,CAAiB,UAHZ;AAIb,mBAAO,oBAAU,MAAV,CAAiB;AAJX,SAAjB;AAMA,cAAK,KAAL,GAAa;AACT,qBAAS,CADA;AAET,uBAAW,CAF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","file":"../../3dCarousel/index.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function () {\r\n\r\n    'use strict';\r\n\r\n\r\n    function bounceOut(time, begin, change, duration) {\r\n        if ((time /= duration) < 1 / 2.75) {\r\n            return change * (7.5625 * time * time) + begin;\r\n        } else if (time < 2 / 2.75) {\r\n            return change * (7.5625 * (time -= 1.5 / 2.75) * time + 0.75) + begin;\r\n        } else if (time < 2.5 / 2.75) {\r\n            return change * (7.5625 * (time -= 2.25 / 2.75) * time + 0.9375) + begin;\r\n        } else {\r\n            return change * (7.5625 * (time -= 2.625 / 2.75) * time + 0.984375) + begin;\r\n        }\r\n    }\r\n\r\n\r\n    function bounceIn(time, begin, change, duration) {\r\n        return change - bounceOut(duration - time, 0, change, duration) + begin;\r\n    }\r\n\r\n\r\n    function bounceInOut(time, begin, change, duration) {\r\n        if (time < duration / 2) {\r\n            return bounceIn(time * 2, 0, change, duration) * 0.5 + begin;\r\n        } else {\r\n            return bounceOut(time * 2 - duration, 0, change, duration) * 0.5 + change * 0.5 + begin;\r\n        }\r\n    };\r\n\r\n    function circIn(time, begin, change, duration) {\r\n        return -change * (Math.sqrt(1 - (time = time / duration) * time) - 1) + begin;\r\n    };\r\n\r\n    function circOut(time, begin, change, duration) {\r\n        return change * Math.sqrt(1 - (time = time / duration - 1) * time) + begin;\r\n    };\r\n\r\n    function circInOut(time, begin, change, duration) {\r\n        if ((time = time / (duration / 2)) < 1) {\r\n            return -change / 2 * (Math.sqrt(1 - time * time) - 1) + begin;\r\n        } else {\r\n            return change / 2 * (Math.sqrt(1 - (time -= 2) * time) + 1) + begin;\r\n        }\r\n    };\r\n\r\n    function cubicIn(time, begin, change, duration) {\r\n        return change * (time /= duration) * time * time + begin;\r\n    };\r\n\r\n    function cubicOut(time, begin, change, duration) {\r\n        return change * ((time = time / duration - 1) * time * time + 1) + begin;\r\n    };\r\n\r\n    function cubicInOut(time, begin, change, duration) {\r\n        if ((time = time / (duration / 2)) < 1) {\r\n            return change / 2 * time * time * time + begin;\r\n        } else {\r\n            return change / 2 * ((time -= 2) * time * time + 2) + begin;\r\n        }\r\n    };\r\n\r\n    function expoIn(time, begin, change, duration) {\r\n        if (time === 0) {\r\n            return begin;\r\n        }\r\n        return change * Math.pow(2, 10 * (time / duration - 1)) + begin;\r\n    };\r\n\r\n    function expoOut(time, begin, change, duration) {\r\n        if (time === duration) {\r\n            return begin + change;\r\n        }\r\n        return change * (-Math.pow(2, -10 * time / duration) + 1) + begin;\r\n    };\r\n\r\n    function expoInOut(time, begin, change, duration) {\r\n        if (time === 0) {\r\n            return begin;\r\n        } else if (time === duration) {\r\n            return begin + change;\r\n        } else if ((time = time / (duration / 2)) < 1) {\r\n            return change / 2 * Math.pow(2, 10 * (time - 1)) + begin;\r\n        } else {\r\n            return change / 2 * (-Math.pow(2, -10 * (time - 1)) + 2) + begin;\r\n        }\r\n    };\r\n\r\n    function linear(time, begin, change, duration) {\r\n        return change * time / duration + begin;\r\n    };\r\n\r\n    function quadIn(time, begin, change, duration) {\r\n        return change * (time = time / duration) * time + begin;\r\n    };\r\n\r\n    function quadOut(time, begin, change, duration) {\r\n        return -change * (time = time / duration) * (time - 2) + begin;\r\n    };\r\n\r\n    function quadInOut(time, begin, change, duration) {\r\n        if ((time = time / (duration / 2)) < 1) {\r\n            return change / 2 * time * time + begin;\r\n        } else {\r\n            return -change / 2 * ((time -= 1) * (time - 2) - 1) + begin;\r\n        }\r\n    };\r\n\r\n    function quartIn(time, begin, change, duration) {\r\n        return change * (time = time / duration) * time * time * time + begin;\r\n    };\r\n\r\n    function quartOut(time, begin, change, duration) {\r\n        return -change * ((time = time / duration - 1) * time * time * time - 1) + begin;\r\n    };\r\n\r\n    function quartInOut(time, begin, change, duration) {\r\n        if ((time = time / (duration / 2)) < 1) {\r\n            return change / 2 * time * time * time * time + begin;\r\n        } else {\r\n            return -change / 2 * ((time -= 2) * time * time * time - 2) + begin;\r\n        }\r\n    };\r\n\r\n    function quintIn(time, begin, change, duration) {\r\n        return change * (time = time / duration) * time * time * time * time + begin;\r\n    };\r\n\r\n    function quintOut(time, begin, change, duration) {\r\n        return change * ((time = time / duration - 1) * time * time * time * time + 1) + begin;\r\n    };\r\n\r\n    function quintInOut(time, begin, change, duration) {\r\n        if ((time = time / (duration / 2)) < 1) {\r\n            return change / 2 * time * time * time * time * time + begin;\r\n        } else {\r\n            return change / 2 * ((time -= 2) * time * time * time * time + 2) + begin;\r\n        }\r\n    };\r\n\r\n    function sineIn(time, begin, change, duration) {\r\n        return -change * Math.cos(time / duration * (Math.PI / 2)) + change + begin;\r\n    };\r\n\r\n    function sineOut(time, begin, change, duration) {\r\n        return change * Math.sin(time / duration * (Math.PI / 2)) + begin;\r\n    };\r\n\r\n    function sineInOut(time, begin, change, duration) {\r\n        return -change / 2 * (Math.cos(Math.PI * time / duration) - 1) + begin;\r\n    };\r\n\r\n    var Ease = {\r\n        bounceOut: bounceOut,\r\n        bounceIn: bounceIn,\r\n        bounceInOut: bounceInOut,\r\n        circIn: circIn,\r\n        circOut: circOut,\r\n        circInOut: circInOut,\r\n        cubicIn: cubicIn,\r\n        cubicOut: cubicOut,\r\n        cubicInOut: cubicInOut,\r\n        expoIn: expoIn,\r\n        expoOut: expoOut,\r\n        expoInOut: expoInOut,\r\n        linear: linear,\r\n        quadIn: quadIn,\r\n        quadOut: quadOut,\r\n        quadInOut: quadInOut,\r\n        quartIn: quartIn,\r\n        quartOut: quartOut,\r\n        quartInOut: quartInOut,\r\n        quintIn: quintIn,\r\n        quintOut: quintOut,\r\n        quintInOut: quintInOut,\r\n        sineIn: sineIn,\r\n        sineOut: sineOut,\r\n        sineInOut: sineInOut\r\n    }\r\n    if (typeof exports === 'object') {\r\n        module.exports = Ease;\r\n    } else if (typeof define === 'function' && define.amd) {\r\n        define(function () {\r\n            return Ease;\r\n        });\r\n    } else {\r\n        this.Ease = Ease;\r\n    }\r\n\r\n}.call(this));","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (\"development\" !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\n'use strict';\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (\"development\" !== 'production') {\n  (function () {\n    var printWarning = function printWarning(format) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var argIndex = 0;\n      var message = 'Warning: ' + format.replace(/%s/g, function () {\n        return args[argIndex++];\n      });\n      if (typeof console !== 'undefined') {\n        console.error(message);\n      }\n      try {\n        // --- Welcome to debugging React ---\n        // This error was thrown as a convenience so that you can use this stack\n        // to find the callsite that caused this warning to fire.\n        throw new Error(message);\n      } catch (x) {}\n    };\n\n    warning = function warning(condition, format) {\n      if (format === undefined) {\n        throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n      }\n\n      if (format.indexOf('Failed Composite propType: ') === 0) {\n        return; // Ignore CompositeComponent proptype check.\n      }\n\n      if (!condition) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        printWarning.apply(undefined, [format].concat(args));\n      }\n    };\n  })();\n}\n\nmodule.exports = warning;","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nif (\"development\" !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (\"development\" !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar checkPropTypes = require('./checkPropTypes');\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (\"development\" !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(\n            false,\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n        } else if (\"development\" !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            warning(\n              false,\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `%s` prop on `%s`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',\n              propFullName,\n              componentName\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      \"development\" !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      \"development\" !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(\n          false,\n          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +\n          'received %s at index %s.',\n          getPostfixForTypeWarning(checker),\n          i\n        );\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nif (\"development\" !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Util from '../../util/util.js';\nimport Layout from '../..//util/layout.js';\nimport Depot from '../../util/depot.js';\n\nvar _layout = new Layout();\nclass Carousel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.PropTypes = {\n            items: PropTypes.array.isRequired,\n            current: PropTypes.number.isRequired,\n            layout: PropTypes.string.isRequired,\n            width: PropTypes.number.isRequired\n        };\n        this.state = {\n            current: 0,\n            rotationY: 0,\n            items: this.props.items,\n            figures: _layout[this.props.layout].figures(this.props, this.props.items, 0)\n        };\n        \n    }\n\n    componentWillMount() {\n        // this.setState({\n        //     items: this.props.items,\n        //     figures: _layout[this.props.layout].figures(this.props, this.props.items, 0)\n        // });\n        this.depot = Depot(this.state, this.props, this.setState.bind(this));\n        this.onRotate = this.depot.onRotate.bind(this);\n        \n    }\n    componentWillReceiveProps(nextProps) {\n        this.depot.onNextProps(nextProps);\n        this.onRotate = this.depot.onRotate.bind(this);\n    }\n    render() {\n        var angle = 2 * Math.PI / this.state.figures.length;\n        var listStyle = {\n            perspective: this.props.perspective + 'px',\n            width: !isNaN(this.props.width) ? this.props.width + 'px' : this.props.width\n        };\n\n        var figures = this.state.figures.map(function(d, i) {\n            var itemStyle = {\n                backgroundImage: 'url(' + d.image + ')'\n            };\n\n            return (\n                <div\n                    key={i}\n                    style={Object.assign({}, itemStyle, Util.figureStyle(d))}\n                    className={'mdBanner__item'}\n                >\n                    <a title={d.title} href={d.link} target=\"_blank\">\n                        <img className=\"image\" src={d.image} />\n                    </a>\n                </div>\n            );\n        });\n        return (\n            <div>\n                <div className={'mdBanner'}>\n                    <div className={'mdBanner-list'} ref=\"bannerList\" style={listStyle}>\n                        <div className=\"l-vm btnPrev\">\n                            <div className=\"l-vm__content\">\n                                <a\n                                    className=\"\"\n                                    href={'#'}\n                                    onClick={Util.partial(this.onRotate, +angle)}\n                                >\n                                    {'<'}\n                                </a>\n                            </div>\n                        </div>\n                        {figures}\n                        <div className=\"l-vm btnNext\">\n                            <a\n                                className=\"l-vm__content\"\n                                href={'#'}\n                                onClick={Util.partial(this.onRotate, -angle)}\n                            >\n                                {'>'}\n                            </a>\n                        </div>\n                        <br />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Carousel;\n","import Carousel from './components/\bcarousel/Carousel';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport * as util from './util/util';\r\nimport Ease from 'ease-functions';\r\n// import CarouselAction from './components/\bcarousel/Carousel.action';\r\n\r\nconst items = [\r\n    {\r\n        url: 'https://placem.at/things?w=400&random='+1,\r\n        title: 'this items title ',\r\n        link: 'http://dummyimage.com/'\r\n    },\r\n    {\r\n        url: 'https://placem.at/things?w=400&random='+2,\r\n        title: 'this items title ',\r\n        link: 'http://dummyimage.com/'\r\n    },\r\n    {\r\n        url: 'https://placem.at/things?w=400&random='+3,\r\n        title: 'this items title ',\r\n        link: 'http://dummyimage.com/'\r\n    },\r\n    {\r\n        url: 'https://placem.at/things?w=400&random='+4,\r\n        title: 'this items title ',\r\n        link: 'http://dummyimage.com/'\r\n    },\r\n    {\r\n        url: 'https://placem.at/things?w=400&random='+5,\r\n        title: 'this items title ',\r\n        link: 'http://dummyimage.com/'\r\n    },\r\n    {\r\n        url: 'https://placem.at/things?w=400&random='+6,\r\n        title: 'this items title ',\r\n        link: 'http://dummyimage.com/'\r\n    },\r\n    {\r\n        url: 'https://placem.at/things?w=400&random='+7,\r\n        title: 'this items title ',\r\n        link: 'http://dummyimage.com/'\r\n    },\r\n    {\r\n        url: 'https://placem.at/things?w=400&random='+8,\r\n        title: 'this items title ',\r\n        link: 'http://dummyimage.com/'\r\n    },\r\n    {\r\n        url: 'https://placem.at/things?w=400&random='+9,\r\n        title: 'this items title ',\r\n        link: 'http://dummyimage.com/'\r\n    }\r\n];\r\n\r\nclass Demo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.PropTypes = {\r\n            banner: PropTypes.object.isRequired,\r\n            actions: PropTypes.object.isRequired\r\n        };\r\n\r\n        var state = {\r\n            layout: 'itunes',\r\n            perspective: 960,\r\n            width: '300px',\r\n            diameter: 960,\r\n            zDistance: 3,\r\n            xDistance: 2.3,\r\n            opacity: true,\r\n            duration: 300,\r\n            ease: 'sineOut'\r\n        };\r\n        var _this = this;\r\n        var easeType = [];\r\n        var gui = new dat.GUI();\r\n\r\n        Object.keys(Ease).map(function(key, index) {\r\n            easeType.push(key.toString());\r\n        });\r\n\r\n        this.controller = {};\r\n        this.controller.perspective = gui.add(state, 'perspective', 0, 3000).step(50);\r\n        this.controller.width = gui.add(state, 'width');\r\n        this.controller.diameter = gui.add(state, 'diameter', 0, 2000).step(1);\r\n        this.controller.zDistance = gui.add(state, 'zDistance', 1, 5).step(0.001);\r\n        this.controller.xDistance = gui.add(state, 'xDistance', 1, 5).step(0.001);\r\n        this.controller.opacity = gui.add(state, 'opacity');\r\n        this.controller.duration = gui.add(state, 'duration', 0, 2000).step(300);\r\n        this.controller.ease = gui.add(state, 'ease', easeType);\r\n\r\n        util.mapObj(function(input) {\r\n            input.onFinishChange(function(value) {\r\n                _this.setState(Object.assign({}, _this.state, state));\r\n            });\r\n        }, this.controller);\r\n\r\n        this.state = Object.assign({}, state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Carousel\r\n                    items={items}\r\n                    current={this.state.current}\r\n                    layout={'itunes'}\r\n                    duration={this.state.duration}\r\n                    perspective={this.state.perspective}\r\n                    diameter={this.state.diameter}\r\n                    width={this.state.width}\r\n                    zDistance={this.state.zDistance}\r\n                    xDistance={this.state.xDistance}\r\n                    ease={this.state.ease}\r\n                    opacity={this.state.opacity}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(<Demo />, document.getElementById('react-index'));\r\n","'use strict';\n\nimport Ease from 'ease-functions';\nimport Layout from './layout';\nimport * as Util from './util';\n\n\nvar _layout = new Layout();\n\nexport default function depot(initialState, initialProps, callback) {\n    var res = {};\n    var state = initialState;\n    var props = initialProps;\n    var requestID;\n    res.onNextProps = function onNextProps(nextProps) {\n        // if (true /*props.layout != nextProps.layout || props.items != nextProps.items*/) {\n        props = nextProps;\n        var to = _layout[props.layout].figures(props, props.items, state.rotationY);\n        var bounds = transitionFigures(state.figures, to, Ease[props.ease], props.duration);\n        var stepper = transit(bounds, to, props.duration);\n        playAnimation(state, to, stepper, callback);\n        // }\n        props = nextProps;\n    };\n\n    res.onRotate = function(angle) {\n        var to = _layout[props.layout].figures(props, props.items, state.rotationY + angle);\n        state.rotationY += angle;\n        var bounds = transitionFigures(state.figures, to, Ease[props.ease], props.duration);\n        var stepper = transit(bounds, to, props.duration);\n\n        if (requestID) {\n            cancelAnimationFrame(requestID);\n        }\n        playAnimation(state, to, stepper, callback);\n    };\n\n    function playAnimation(state, to, stepper, callback) {\n        if (requestID) window.cancelAnimationFrame(requestID);\n        function animate(timestamp) {\n            requestID = requestAnimationFrame(animate);\n            state.figures = stepper(timestamp);\n            callback(state);\n            if (state.figures == to) {\n                cancelAnimationFrame(requestID);\n            }\n        }\n        requestAnimationFrame(animate);\n    }\n    return res;\n}\n\nfunction transitionFigures(from, to, ease) {\n    var keys = Util.uniq(Util.pluck('key', from.concat(to)));\n    var fromTo = [];\n    keys.forEach(function(key) {\n        fromTo.push(\n            transfigure(startFrame(from[key], to[key]), endFrame(from[key], to[key]), ease)\n        );\n    });\n    return fromTo;\n}\n\nfunction transit(entries, to, duration) {\n    var start, end;\n    var withChange = addChange(entries);\n    var time = 0;\n    return function step(timestamp) {\n        if (!start) {\n            start = timestamp;\n            end = timestamp + duration;\n        }\n        if (timestamp >= end) {\n            return to;\n        }\n        time = timestamp - start;\n        return tally(time, withChange, duration);\n    };\n}\n\nfunction transfigure(from, to, ease) {\n    var keys = Util.uniq(Object.keys(from || {}).concat(Object.keys(to || {})));\n    var res = {};\n    keys.forEach(function(key) {\n        res[key] = {\n            from: from[key],\n            to: to[key]\n        };\n        res[key].ease = isNaN(res[key].from) ? secondArg : ease;\n    });\n    return res;\n}\n\nfunction addChange(entries) {\n    var len = entries.length;\n    var res = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        res[i] = addObjChange(entries[i]);\n    }\n    return res;\n}\n\nfunction addObjChange(entry) {\n    var res = Object.create(null);\n    for (var key in entry) {\n        res[key] = Util.merge(entry[key], { change: entry[key].to - entry[key].from });\n    }\n    return res;\n}\n\nfunction tally(time, entries, duration) {\n    var len = entries.length;\n    var res = new Array(len);\n    var entry;\n    for (var i = 0; i < len; ++i) {\n        entry = entries[i];\n        var obj = Object.create(null);\n        for (var key in entry) {\n            obj[key] = entry[key].ease\n                ? entry[key].ease(time, entry[key].from, entry[key].change, duration)\n                : entry[key].from;\n        }\n        res[i] = obj;\n    }\n    return res;\n}\n\nvar secondArg = function secondArg(x, y) {\n    return y;\n};\n\nvar present = function present(entries) {\n    return entries.filter(function(entry) {\n        return entry.present;\n    });\n};\n\nfunction startFrame(now, then) {\n    return now || Util.merge(then, { present: true /*opacity: 0 */ });\n}\n\nfunction endFrame(now, then) {\n    return now && !then\n        ? Util.merge(now, { present: false /*opacity: 0 */ }) // leaves\n        : Util.merge(then, { present: true /*opacity: 1*/ });\n}\n","// import Ease from 'ease-functions';\nimport * as Util from './util';\n\nexport default function Layout() {\n    var layout = this;\n    layout.itunes = {\n        distance: function distance(width, sides) {},\n        figures: function figures(props, images, initial) {\n            var sides = images.length;\n            var r = Math.floor(props.diameter / 2);\n            var angle = Math.PI * 2 / sides;\n            var acceptable = Math.round(initial / angle) * angle;\n            // var rotate = -30;\n            var maxRatio = 0.4;\n            var zDistance = props.zDistance;\n            var xDistance = props.xDistance;\n\n            function cubicOut(time, begin, change, duration) {\n                return change * ((time = time / duration - 1) * time * time + 1) + begin;\n            }\n\n            function cubicIn(time, begin, change, duration) {\n                return change * (time /= duration) * time * time + begin;\n            }\n\n            return Util.range(0, sides).map(function(d) {\n                var ratio = {};\n                var angleR = Math.PI * 0.5 - (d * angle + acceptable);\n                var thisRotate = 0.5;\n                var opacity = 0;\n\n                if (Math.abs(Math.cos(angleR)) != 1) {\n                    ratio.easeOut =\n                        1 + Math.round(cubicOut(sides, 0, maxRatio, sides - 1) * 10 / 10);\n                    ratio.easeIn = 1 + Math.round(cubicIn(sides, 0, maxRatio, sides - 1) * 10 / 10);\n                }\n\n                if (Math.sin(angleR) != -1) {\n                    thisRotate = Math.sin(angleR + Math.PI * 0.5) * 0.3;\n                }\n\n                if (Math.sin(angleR) != 1) {\n                    opacity = Math.max(Math.sin(angleR)*1.1, 0.45);\n                } else {\n                    opacity = 1;\n                }\n\n                return {\n                    rotateY: (0 - thisRotate * ratio.easeOut) * -1,\n                    translateX: r * Math.cos(angleR) * xDistance,\n                    translateZ: 0 - r * Math.abs(1 - Math.sin(angleR)) * zDistance * ratio.easeOut, //bug issue with change z distance witnout min value\n                    opacity: props.opacity ? opacity : 1,\n                    zIndex: Math.round(Math.sin(angleR) * 100),\n                    present: true,\n                    key: d,\n                    image: images[d].url\n                };\n            });\n        }\n    };\n\n    return layout;\n}\n","//conver object to css inline style\nexport function figureStyle(d) {\n    var translateX = Object.hasOwnProperty.call(d, 'translateX') ? d.translateX : 0;\n    var zIndex = Object.hasOwnProperty.call(d, 'zIndex') ? d.zIndex : 0;\n    // var shadowOpacity = d.opacity == 1 ? 0 : 1;\n    return {\n        transform:\n            'rotateY(' +\n            d.rotateY +\n            'rad) ' +\n            ' translateX(' +\n            translateX +\n            'px)' +\n            ' translateZ(' +\n            d.translateZ +\n            'px)' +\n            '',\n        zIndex: zIndex,\n        boxShadow: '0 0 100px 100px rgba(0,0,0,' + (1 - d.opacity) + ') inset',\n        opacity: d.opacity\n        // opacity: d.opacity\n    };\n}\n\nexport function partial(func) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return function() {\n        return func.apply(this, args.concat(Array.prototype.slice.call(arguments, 0)));\n    };\n}\n\nexport function range(from, to) {\n    var res = [];\n    for (var i = from; i < to; ++i) {\n        res.push(i);\n    }\n    return res;\n}\n\nexport function uniq(a) {\n    var prims = { boolean: {}, number: {}, string: {} },\n        objs = [];\n    return a.filter(function(item) {\n        var type = typeof item;\n        if (type in prims)\n            return prims[type].hasOwnProperty(item) ? false : (prims[type][item] = true);\n        else return objs.indexOf(item) >= 0 ? false : objs.push(item);\n    });\n}\n\n/**\n * Merge defaults with user options\n * @private\n * @param {Object} defaults Default settings\n * @param {Object} options User options\n * @returns {Object} Merged values of defaults and options\n */\nexport function merge(defaults, options) {\n    var extended = {};\n    var prop;\n    for (prop in defaults) {\n        if (Object.prototype.hasOwnProperty.call(defaults, prop)) {\n            extended[prop] = defaults[prop];\n        }\n    }\n    for (prop in options) {\n        if (Object.prototype.hasOwnProperty.call(options, prop)) {\n            extended[prop] = options[prop];\n        }\n    }\n    return extended;\n}\n\nexport function pluck(key, entries) {\n    return entries.map(function(entry) {\n        return entry[key];\n    });\n}\n\nexport function mapObj(fn, obj) {\n    var res = {};\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            res[key] = fn(obj[key]);\n        }\n    }\n    return res;\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}